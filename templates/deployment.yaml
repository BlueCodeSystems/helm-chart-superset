apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superset.fullname" . }}
  labels:
    app: {{ include "superset.name" . }}
    chart: {{ include "superset.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "superset.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ include "superset.fullname" . }}
      labels:
        app: {{ include "superset.name" . }}
        chart: {{ include "superset.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.deploymentAnnotations }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "superset.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: superset-configs
          secret:
            secretName: {{ include "superset.fullname" . }}
        - name: superset-assets-images
          configMap:
            name: {{ include "superset.fullname" . }}-assets-images
        - name: storage-volume
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "superset.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: {{ include "superset.fullname" . }}-encrypted-secrets
          configMap:
            name: {{ include "superset.fullname" . }}-cm
        - name: {{ include "superset.fullname" . }}-decrypted-secrets
          emptyDir:
            medium: Memory
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.enableKamusSecrets }}
      initContainers:
        - name: "kamus-init"
          image: "soluto/kamus-init-container:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: KAMUS_URL
              value: http://kamus-decryptor.default.svc.cluster.local/
          volumeMounts:
            - name: {{ include "superset.fullname" . }}-encrypted-secrets
              mountPath: /encrypted-secrets
            - name: {{ include "superset.fullname" . }}-decrypted-secrets
              mountPath: /decrypted-secrets
          args: ["-e","/encrypted-secrets","-d","/decrypted-secrets", "-n", "superset_config.json"]
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/env"]
          args:
          - bash
          - /home/superset/init_superset.sh
          {{- range .Values.extraArguments }}
          - {{ . }}
          {{- end }}
          {{- range .Values.extraSecureArguments }}
          - {{ . }}
          {{- end }}
          volumeMounts:
            - name: superset-configs
              mountPath: /home/superset
            - name: superset-assets-images
              mountPath: /home/superset/assets/images
            {{- $assetsPath  := .Values.supersetAssetsPath -}}
            {{- range $key, $val := .Values.imageAssets }}
            - name: superset-assets-images
              mountPath: "{{ $assetsPath }}/images/{{ $key }}"
              subPath: "{{- $key }}"
            {{- end }}
            - name: storage-volume
              mountPath: /var/lib/superset
            - name: {{ include "superset.fullname" . }}-decrypted-secrets
              mountPath: /secrets
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
          {{- if .Values.extraEnv }}
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          {{- end }}
          {{- if .Values.extraEnvFromSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.extraEnvFromSecret }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
